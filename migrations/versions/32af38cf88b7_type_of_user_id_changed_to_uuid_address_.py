"""type of user id changed to UUID, address_id removed from products table, CEP column added to address table and steet, state and city columns removed from it

Revision ID: 32af38cf88b7
Revises: 33f81d0650e2
Create Date: 2022-05-03 16:18:38.645042

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '32af38cf88b7'
down_revision = '33f81d0650e2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('addresses', sa.Column('CEP', sa.String(), nullable=False))
    op.drop_column('addresses', 'state')
    op.drop_column('addresses', 'street')
    op.drop_column('addresses', 'city')
    op.alter_column('users', 'id',
               existing_type=sa.Integer(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('users_id_seq'::regclass)"))
    op.alter_column('products', 'locator_id',
               existing_type=sa.Integer(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=False)
    op.drop_constraint('products_address_id_fkey', 'products', type_='foreignkey')
    op.drop_column('products', 'address_id')
    op.alter_column('rooms', 'locator_id',
               existing_type=sa.Integer(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=True)
    op.add_column('users', sa.Column('address_id', postgresql.UUID(as_uuid=True), nullable=False))

    op.create_foreign_key(None, 'users', 'addresses', ['address_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.alter_column('users', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.Integer(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('users_id_seq'::regclass)"))
    op.drop_column('users', 'address_id')
    op.alter_column('rooms', 'locator_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.Integer(),
               existing_nullable=True)
    op.add_column('products', sa.Column('address_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('products_address_id_fkey', 'products', 'addresses', ['address_id'], ['id'])
    op.alter_column('products', 'locator_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.Integer(),
               existing_nullable=False)
    op.add_column('addresses', sa.Column('city', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('addresses', sa.Column('street', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('addresses', sa.Column('state', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.drop_column('addresses', 'CEP')
    # ### end Alembic commands ###
